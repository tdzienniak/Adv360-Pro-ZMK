/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 21 39 40 54 71 55 22 23 41 72 56 42 24 8 9 10 11 25 43 57 73 74 75 59 58 44 45 27 26 12 13 70 69 68 53 37 38 36 35 52 66 67 65>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 46 47 48 49 50 51 60 61 62 63 64 66 35 36 52 66 67 53 68 69 70 37 38 65>;
            hold-trigger-on-release;
        };

        comma_quest: comma_quest {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUEST";
            bindings = <&kp COMMA>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            bindings = <&kp DOT>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_l_lgui {
            bindings = <&kp LGUI>;
            key-positions = <65 29>;
            slow-release;
        };

        combo_l_lalt {
            bindings = <&kp LALT>;
            key-positions = <65 30>;
            slow-release;
        };

        combo_l_lshift {
            bindings = <&kp LSHIFT>;
            key-positions = <65 31>;
            slow-release;
        };

        combo_l_lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <65 32>;
            slow-release;
        };

        combo_l_lctrl_lshift {
            bindings = <&kp LC(LSHIFT)>;
            key-positions = <65 32 31>;
            slow-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1       &kp N2       &kp N3        &kp N4        &kp N5  &tog 2                                                          &mo 3      &kp N6  &kp N7        &kp N8        &kp N9       &kp N0               &kp MINUS
&kp TAB    &kp Q        &kp W        &kp E         &kp R         &kp T   &kp DEL                                                         &none      &kp Y   &kp U         &kp I         &kp O        &kp P                &kp BSLH
&kp ESC    &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G   &kp BSPC  &mo 5       &kp LALT      &kp PRINTSCREEN  &kp RALT   &none      &kp H   &hmr RSHFT J  &hmr RCTRL K  &hmr LALT L  &hmr RGUI SEMICOLON  &kp SQT
&kp BSPC   &kp Z        &kp X        &kp C         &kp V         &kp B                         &kp HOME      &kp PG_UP                              &kp N   &kp M         &comma_quest  &dot_excl    &kp MINUS            &kp RSHFT
&mo 1      &none        &kp CAPS     &kp LEFT      &kp RIGHT             &mo 4     &kp LSHIFT  &kp END       &kp PG_DN        &kp ENTER  &kp SPACE          &kp DOWN      &kp UP        &kp LBKT     &kp RBKT             &mo 1
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 3                                      &mo 4   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 4      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 1      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 1
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        symbol {
            bindings = <
&none  &none          &none            &none        &none          &none          &none                                      &none      &none           &none              &none                 &none                  &none             &none
&none  &kp HASH       &kp EXCLAMATION  &kp PERCENT  &kp COLON      &kp AMPERSAND  &none                                      &none      &kp PIPE        &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE  &none
&none  &kp QUESTION   &kp MINUS        &kp EQUAL    &kp SEMICOLON  &kp AT_SIGN    &none  &none  &none      &none  &none      &none      &kp UNDERSCORE  &kp CARET          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR        &none
&none  &kp BACKSLASH  &kp SLASH        &kp STAR     &kp PLUS       &kp GRAVE                    &none      &none                        &kp TILDE       &kp LESS_THAN      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &none
&none  &none          &none            &none        &none                         &none  &none  &none      &none  &kp ENTER  &kp SPACE                  &none              &none                 &none                  &none             &none
            >;
        };

        numbers {
            bindings = <
&none   &none     &none     &none      &none      &none  &none                                      &none   &none  &none   &none   &none   &none  &none
&trans  &none     &none     &none      &none      &none  &none                                      &none   &none  &kp N7  &kp N8  &kp N9  &none  &none
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none  &none  &none  &none      &none  &none      &none   &none  &kp N4  &kp N5  &kp N6  &none  &none
&trans  &none     &none     &none      &none      &none                &none      &none                     &none  &kp N1  &kp N2  &kp N3  &none  &none
&none   &none     &none     &none      &none             &none  &none  &none      &none  &kp ENTER  &kp N0         &none   &none   &none   &none  &none
            >;
        };
    };
};
